# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: jmeter.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='jmeter.proto',
  package='jmeter',
  syntax='proto3',
  serialized_pb=_b('\n\x0cjmeter.proto\x12\x06jmeter\"F\n\nTestParams\x12\x12\n\nnum_slaves\x18\x01 \x01(\t\x12\x11\n\ttest_plan\x18\x02 \x01(\t\x12\x11\n\tslave_ips\x18\x03 \x01(\t\"\xbc\x01\n\x0c\x43onfigJmeter\x12\x10\n\x08url_list\x18\x01 \x01(\t\x12\x13\n\x0bnum_threads\x18\x02 \x01(\t\x12\x11\n\turl_names\x18\x03 \x01(\t\x12\x15\n\rurl_protocols\x18\x04 \x01(\t\x12\x13\n\x0burl_methods\x18\x05 \x01(\t\x12\x12\n\nurl_agents\x18\x06 \x01(\t\x12\r\n\x05loops\x18\x07 \x01(\t\x12\x11\n\tramp_time\x18\x08 \x01(\t\x12\x10\n\x08\x64uration\x18\t \x01(\t\"\x1e\n\x0bJmeterReply\x12\x0f\n\x07message\x18\x01 \x01(\t\",\n\x08JResults\x12\x10\n\x08r_format\x18\x01 \x01(\t\x12\x0e\n\x06r_file\x18\x02 \x01(\t2\xb3\x01\n\nController\x12\x36\n\x07GenTest\x12\x14.jmeter.ConfigJmeter\x1a\x13.jmeter.JmeterReply\"\x00\x12\x36\n\tStartTest\x12\x12.jmeter.TestParams\x1a\x13.jmeter.JmeterReply\"\x00\x12\x35\n\nGetResults\x12\x10.jmeter.JResults\x1a\x13.jmeter.JmeterReply\"\x00\x62\x06proto3')
)




_TESTPARAMS = _descriptor.Descriptor(
  name='TestParams',
  full_name='jmeter.TestParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_slaves', full_name='jmeter.TestParams.num_slaves', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='test_plan', full_name='jmeter.TestParams.test_plan', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='slave_ips', full_name='jmeter.TestParams.slave_ips', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=94,
)


_CONFIGJMETER = _descriptor.Descriptor(
  name='ConfigJmeter',
  full_name='jmeter.ConfigJmeter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url_list', full_name='jmeter.ConfigJmeter.url_list', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_threads', full_name='jmeter.ConfigJmeter.num_threads', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url_names', full_name='jmeter.ConfigJmeter.url_names', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url_protocols', full_name='jmeter.ConfigJmeter.url_protocols', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url_methods', full_name='jmeter.ConfigJmeter.url_methods', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url_agents', full_name='jmeter.ConfigJmeter.url_agents', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='loops', full_name='jmeter.ConfigJmeter.loops', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ramp_time', full_name='jmeter.ConfigJmeter.ramp_time', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration', full_name='jmeter.ConfigJmeter.duration', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=285,
)


_JMETERREPLY = _descriptor.Descriptor(
  name='JmeterReply',
  full_name='jmeter.JmeterReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='jmeter.JmeterReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=287,
  serialized_end=317,
)


_JRESULTS = _descriptor.Descriptor(
  name='JResults',
  full_name='jmeter.JResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='r_format', full_name='jmeter.JResults.r_format', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='r_file', full_name='jmeter.JResults.r_file', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=319,
  serialized_end=363,
)

DESCRIPTOR.message_types_by_name['TestParams'] = _TESTPARAMS
DESCRIPTOR.message_types_by_name['ConfigJmeter'] = _CONFIGJMETER
DESCRIPTOR.message_types_by_name['JmeterReply'] = _JMETERREPLY
DESCRIPTOR.message_types_by_name['JResults'] = _JRESULTS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestParams = _reflection.GeneratedProtocolMessageType('TestParams', (_message.Message,), dict(
  DESCRIPTOR = _TESTPARAMS,
  __module__ = 'jmeter_pb2'
  # @@protoc_insertion_point(class_scope:jmeter.TestParams)
  ))
_sym_db.RegisterMessage(TestParams)

ConfigJmeter = _reflection.GeneratedProtocolMessageType('ConfigJmeter', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGJMETER,
  __module__ = 'jmeter_pb2'
  # @@protoc_insertion_point(class_scope:jmeter.ConfigJmeter)
  ))
_sym_db.RegisterMessage(ConfigJmeter)

JmeterReply = _reflection.GeneratedProtocolMessageType('JmeterReply', (_message.Message,), dict(
  DESCRIPTOR = _JMETERREPLY,
  __module__ = 'jmeter_pb2'
  # @@protoc_insertion_point(class_scope:jmeter.JmeterReply)
  ))
_sym_db.RegisterMessage(JmeterReply)

JResults = _reflection.GeneratedProtocolMessageType('JResults', (_message.Message,), dict(
  DESCRIPTOR = _JRESULTS,
  __module__ = 'jmeter_pb2'
  # @@protoc_insertion_point(class_scope:jmeter.JResults)
  ))
_sym_db.RegisterMessage(JResults)



_CONTROLLER = _descriptor.ServiceDescriptor(
  name='Controller',
  full_name='jmeter.Controller',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=366,
  serialized_end=545,
  methods=[
  _descriptor.MethodDescriptor(
    name='GenTest',
    full_name='jmeter.Controller.GenTest',
    index=0,
    containing_service=None,
    input_type=_CONFIGJMETER,
    output_type=_JMETERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartTest',
    full_name='jmeter.Controller.StartTest',
    index=1,
    containing_service=None,
    input_type=_TESTPARAMS,
    output_type=_JMETERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetResults',
    full_name='jmeter.Controller.GetResults',
    index=2,
    containing_service=None,
    input_type=_JRESULTS,
    output_type=_JMETERREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CONTROLLER)

DESCRIPTOR.services_by_name['Controller'] = _CONTROLLER

# @@protoc_insertion_point(module_scope)
