# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import jmeter_pb2 as jmeter__pb2


class ControllerStub(object):
  """The controller service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GenTest = channel.unary_unary(
        '/jmeter.Controller/GenTest',
        request_serializer=jmeter__pb2.ConfigJmeter.SerializeToString,
        response_deserializer=jmeter__pb2.JmeterReply.FromString,
        )
    self.StartTest = channel.unary_unary(
        '/jmeter.Controller/StartTest',
        request_serializer=jmeter__pb2.TestParams.SerializeToString,
        response_deserializer=jmeter__pb2.JmeterReply.FromString,
        )
    self.GetResults = channel.unary_unary(
        '/jmeter.Controller/GetResults',
        request_serializer=jmeter__pb2.JResults.SerializeToString,
        response_deserializer=jmeter__pb2.JmeterReply.FromString,
        )


class ControllerServicer(object):
  """The controller service definition.
  """

  def GenTest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartTest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetResults(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GenTest': grpc.unary_unary_rpc_method_handler(
          servicer.GenTest,
          request_deserializer=jmeter__pb2.ConfigJmeter.FromString,
          response_serializer=jmeter__pb2.JmeterReply.SerializeToString,
      ),
      'StartTest': grpc.unary_unary_rpc_method_handler(
          servicer.StartTest,
          request_deserializer=jmeter__pb2.TestParams.FromString,
          response_serializer=jmeter__pb2.JmeterReply.SerializeToString,
      ),
      'GetResults': grpc.unary_unary_rpc_method_handler(
          servicer.GetResults,
          request_deserializer=jmeter__pb2.JResults.FromString,
          response_serializer=jmeter__pb2.JmeterReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'jmeter.Controller', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
